# 2021-03 : Initial code [N. Jourdain, IGE-CNRS]
#====================================================================================================
import numpy as np
import sys

#====================================================================================================
def grid_bounds_oce(region='Amundsen'):
   """ Gives minimum and maximum longitude and latitude for the common MISOMIP2 ocean grid

       region: 'Amundsen' (default) or 'Weddell'

       exemple: [lonmin,lonmax,latmin,latmax] = grid_bounds_oce(region='Amundsen')
   """
   if ( region == 'Amundsen' ):
     longitude_min = -140.0
     longitude_max =  -90.0
     latitude_min  =  -76.0
     latitude_max  =  -69.0
   elif ( region == 'Weddell' ):
     longitude_min = -90.0
     longitude_max =   0.0
     latitude_min  = -85.0
     latitude_max  = -60.0
   else:
     sys.exit("~!@#$%^* error : region is not defined, choose either 'Amundsen' or 'Weddell'")

   return [longitude_min,longitude_max,latitude_min,latitude_max]

#====================================================================================================
def generate_3d_grid_oce(region='Amundsen'):
   """Generates (longitude, latitude, depth) of the common MISOMIP2 3d ocean grid

      region: 'Amundsen' (default) or 'Weddell'

      exemple: [lon,lat,depth]=generate_3d_grid_oce(region='Amundsen')
   """

   [lonmin,lonmax,latmin,latmax] = grid_bounds_oce(region=region)

   if ( region == 'Amundsen' ):
     longitude=np.arange(lonmin,lonmax+0.1,0.1)
     latitude=np.arange(latmin,latmax+1./30.,1./30.)
     depth=np.array([0., 100., 200., 300., 400., 500., 600., 700., 800., 900., 1000., 1500.])
   elif ( region == 'Weddell' ):
     longitude=np.arange(lonmin,lonmax+1./3.,1./3.)
     latitude=np.arange(latmin,latmax+1./10.,1./10.)
     depth=np.array([0., 100., 200., 300., 400., 500., 600., 700., 800., 900., 1000., 1500.])
   else:
     sys.exit("~!@#$%^* error : region is not defined, choose either 'Amundsen' or 'Weddell'")

   return [longitude,latitude,depth]

#====================================================================================================
def generate_section_grid_oce(region='Amundsen',section=1):
   """Generates (longitude, latitude, depth) of the common MISOMIP2 ocean section

      region: 'Amundsen' (default), 'Weddell'

      section: 1 (default) -> Pine Island Trough for Amundsen
                           -> Filchner Ice Shelf front for Weddell
               2           -> Dotson Trough for Amundsen
                           -> Ronne Ice Shelf front for Weddell
               3           -> /not defined/ for Amundsen
                           -> section at 76degS for Weddell

      exemple: [lon,lat,depth]=generate_section_grid_oce(region='Amundsen')
   """

   if ( region == 'Amundsen' & section == 1 ): # Pine Island Trough
     longitude=np.array([  -97.643,  -97.994,  -98.344,  -98.694,  -99.045,  -99.395,  -99.746, -100.096,
                          -100.446, -100.797, -101.147, -101.497, -101.847, -102.056, -102.264, -102.473,
                          -102.681, -102.890, -103.098, -103.306, -103.515, -103.723, -103.932, -104.069,
                          -104.150, -104.231, -104.311, -104.392, -104.472, -104.553, -104.633, -104.714,
                          -104.795, -104.875, -105.005, -105.147, -105.288, -105.430, -105.572, -105.713,
                          -105.855, -105.997, -106.138, -106.280, -106.349, -106.371, -106.393, -106.416,
                          -106.438, -106.460, -106.483, -106.505, -106.528, -106.550, -106.572, -106.595,
                          -106.617, -106.639, -106.662, -106.684, -106.707, -106.716, -106.687, -106.659,
                          -106.630, -106.602, -106.573, -106.545, -106.516, -106.488, -106.460, -106.431,
                          -106.403, -106.374, -106.330, -106.230, -106.130, -106.030, -105.930, -105.830,
                          -105.730, -105.630, -105.530, -105.430, -105.330, -105.230, -105.130, -105.030,
                          -104.942, -104.873, -104.803, -104.733, -104.663, -104.593, -104.523, -104.454,
                          -104.384, -104.314, -104.244, -104.174, -104.104, -104.017, -103.929, -103.841,
                          -103.753, -103.665, -103.578, -103.490, -103.402, -103.314, -103.226, -103.138,
                          -103.050, -103.003, -102.963, -102.923, -102.883, -102.843, -102.803, -102.763,
                          -102.724, -102.684, -102.644, -102.604, -102.563, -102.518, -102.472, -102.427,
                          -102.382, -102.338, -102.294, -102.251, -102.208, -102.164, -102.121, -102.104,
                          -102.093, -102.082, -102.071, -102.059, -102.048, -102.037, -102.026, -102.014,
                          -102.003, -101.992, -101.981, -101.969, -101.958, -101.947, -101.936, -101.942,
                          -101.951, -101.960, -101.969, -101.978, -101.987, -101.996, -102.005, -102.015,
                          -102.024, -102.033, -102.042, -102.051, -102.060 ])
     latitude=np.arange(-75.5+1./30.,-70.0+1./30.,1./30.) 
     depth=np.arange(0.,1990.,5.)
   elif ( region == 'Amundsen' & section == 2 ): # Dotson Trough
     longitude=np.array([ -114.313, -114.127, -113.940, -113.753, -113.567, -113.380, -113.193, -113.058,
                          -112.975, -112.892, -112.808, -112.725, -112.642, -112.575, -112.525, -112.475,
                          -112.425, -112.375, -112.325, -112.318, -112.353, -112.389, -112.424, -112.460,
                          -112.495, -112.538, -112.587, -112.635, -112.684, -112.733, -112.781, -112.830,
                          -112.878, -112.927, -112.975, -113.024, -113.079, -113.177, -113.275, -113.373,
                          -113.471, -113.569, -113.667, -113.765, -113.863, -113.961, -114.076, -114.208,
                          -114.340, -114.472, -114.604, -114.735, -114.867, -114.999, -115.123, -115.247,
                          -115.371, -115.495, -115.619, -115.743, -115.867, -115.991, -116.115, -116.239,
                          -116.363, -116.487, -116.580, -116.669, -116.758, -116.847, -116.936, -117.025,
                          -117.114, -117.203, -117.292, -117.381, -117.470, -117.559, -117.648, -117.730,
                          -117.785, -117.840, -117.896, -117.951, -118.006, -118.061, -118.117, -118.172,
                          -118.227, -118.282, -118.338, -118.393, -118.448 ])
     latitude=np.arange(-75.05+1./30.,-71.95+1./30.,1./30.)
     depth=np.arange(0.,1505.,5.)   
   elif ( region == 'Weddell' & section == 1 ): # SR04
     longitude=np.arange(-55,-9.9,0.1)
     latitude=np.array([-62.92608857142859 ,  -62.94654571428573 ,  -62.96700285714287 ,  -62.98746000000001 ,  -63.00791714285716 ,
                        -63.02837428571430 ,  -63.04883142857144 ,  -63.06928857142859 ,  -63.08974571428572 ,  -63.11020285714286 ,
                        -63.13066000000001 ,  -63.15111714285715 ,  -63.17157428571429 ,  -63.19203142857144 ,  -63.21248857142858 ,
                        -63.23294571428572 ,  -63.25340285714286 ,  -63.27386000000000 ,  -63.29431714285714 ,  -63.31477428571428 ,
                        -63.33523142857143 ,  -63.35411395348837 ,  -63.37271860465117 ,  -63.39132325581396 ,  -63.40992790697675 ,
                        -63.42698172043011 ,  -63.44276666666668 ,  -63.45855161290323 ,  -63.47433655913979 ,  -63.49012150537635 ,
                        -63.50869709664041 ,  -63.52758275957419 ,  -63.54646842250796 ,  -63.56535408544174 ,  -63.58423974837551 ,
                        -63.60312541130929 ,  -63.62201107424306 ,  -63.64743264659272 ,  -63.67611727416801 ,  -63.70480190174328 ,
                        -63.73348652931856 ,  -63.75780363350903 ,  -63.76901816754515 ,  -63.78023270158125 ,  -63.79144723561737 ,
                        -63.80266176965348 ,  -63.81387630368959 ,  -63.82509083772569 ,  -63.83630537176181 ,  -63.84751990579792 ,
                        -63.86846230057805 ,  -63.87809235838151 ,  -63.88772241618498 ,  -63.89735247398845 ,  -63.90698253179192 ,
                        -63.91661258959539 ,  -63.92624264739885 ,  -63.93587270520232 ,  -63.94550276300579 ,  -63.95950695082794 ,
                        -63.97734363155577 ,  -63.99518031228359 ,  -64.01301699301142 ,  -64.03085367373923 ,  -64.04869035446706 ,
                        -64.06652703519488 ,  -64.08436371592270 ,  -64.10220039665053 ,  -64.12003707737834 ,  -64.13787375810617 ,
                        -64.15571043883399 ,  -64.17354711956182 ,  -64.19138380028964 ,  -64.20922048101745 ,  -64.22705716174528 ,
                        -64.23978148148149 ,  -64.24975299145301 ,  -64.25972450142451 ,  -64.26969601139602 ,  -64.27966752136753 ,
                        -64.28963903133904 ,  -64.29961054131056 ,  -64.30958205128206 ,  -64.31955356125357 ,  -64.32952507122508 ,
                        -64.33949658119658 ,  -64.34946809116810 ,  -64.35943960113961 ,  -64.36941111111112 ,  -64.37938262108263 ,
                        -64.38935413105415 ,  -64.39932564102565 ,  -64.40238790571630 ,  -64.41614602004162 ,  -64.42990413436695 ,
                        -64.44366224869228 ,  -64.45742036301760 ,  -64.47117847734293 ,  -64.48493659166827 ,  -64.49869470599360 ,
                        -64.51245282031893 ,  -64.52621093464425 ,  -64.53996904896958 ,  -64.55372716329491 ,  -64.56748527762025 ,
                        -64.58124339194558 ,  -64.59500150627090 ,  -64.60875962059623 ,  -64.62214035087722 ,  -64.63383625730997 ,
                        -64.64553216374271 ,  -64.65722807017546 ,  -64.66892397660821 ,  -64.68061988304096 ,  -64.69231578947371 ,
                        -64.70401169590644 ,  -64.71570760233920 ,  -64.72740350877194 ,  -64.73909941520469 ,  -64.75079532163744 ,
                        -64.76249122807019 ,  -64.77418713450294 ,  -64.78588304093569 ,  -64.79757894736844 ,  -64.80927485380118 ,
                        -64.82105811258279 ,  -64.83380645695365 ,  -64.84655480132452 ,  -64.85930314569538 ,  -64.87205149006624 ,
                        -64.88479983443710 ,  -64.89754817880797 ,  -64.91029652317883 ,  -64.92304486754969 ,  -64.93579321192055 ,
                        -64.94854155629142 ,  -64.96128990066228 ,  -64.97403824503314 ,  -64.98678658940400 ,  -64.99953493377485 ,
                        -65.01228327814572 ,  -65.02503162251658 ,  -65.03777996688744 ,  -65.04945664008197 ,  -65.06031491183144 ,
                        -65.07117318358091 ,  -65.08203145533038 ,  -65.09288972707985 ,  -65.10374799882932 ,  -65.11460627057879 ,
                        -65.12546454232826 ,  -65.13632281407773 ,  -65.14718108582720 ,  -65.15803935757667 ,  -65.16889762932614 ,
                        -65.17975590107561 ,  -65.19061417282508 ,  -65.27687684887480 ,  -65.28937462545457 ,  -65.29906917090912 ,
                        -65.30876371636366 ,  -65.31845826181821 ,  -65.32815280727276 ,  -65.33784735272730 ,  -65.34754189818184 ,
                        -65.35723644363640 ,  -65.36693098909093 ,  -65.37662553454548 ,  -65.38632008000003 ,  -65.39601462545457 ,
                        -65.40570917090912 ,  -65.41667889273361 ,  -65.43224982698966 ,  -65.44782076124572 ,  -65.46339169550177 ,
                        -65.47896262975783 ,  -65.49453356401388 ,  -65.51010449826994 ,  -65.52567543252600 ,  -65.54124636678205 ,
                        -65.55681730103811 ,  -65.57238823529416 ,  -65.58795916955022 ,  -65.60353010380626 ,  -65.61910103806233 ,
                        -65.63467197231839 ,  -65.64451046601944 ,  -65.65260755339808 ,  -65.66070464077671 ,  -65.66880172815536 ,
                        -65.67689881553400 ,  -65.68499590291265 ,  -65.69309299029128 ,  -65.70119007766992 ,  -65.70928716504856 ,
                        -65.71738425242721 ,  -65.72631166225953 ,  -65.73618674204434 ,  -65.74606182182914 ,  -65.75593690161396 ,
                        -65.76581198139877 ,  -65.77568706118358 ,  -65.78556214096838 ,  -65.79543722075320 ,  -65.80531230053800 ,
                        -65.81518738032281 ,  -65.82506246010762 ,  -65.83590318012106 ,  -65.84770954036311 ,  -65.85951590060516 ,
                        -65.87132226084721 ,  -65.88312862108926 ,  -65.89493498133130 ,  -65.90674134157337 ,  -65.91854770181541 ,
                        -65.93121771868307 ,  -65.94420232807329 ,  -65.95718693746352 ,  -65.97017154685373 ,  -65.98315615624395 ,
                        -65.99614076563418 ,  -66.00912537502440 ,  -66.02210998441461 ,  -66.03509459380484 ,  -66.04807920319506 ,
                        -66.05918106040272 ,  -66.06813408053695 ,  -66.07708710067118 ,  -66.08604012080541 ,  -66.09499314093964 ,
                        -66.10394616107386 ,  -66.11289918120809 ,  -66.12170000000000 ,  -66.12960438196957 ,  -66.13927926810118 ,
                        -66.14895415423280 ,  -66.15862904036442 ,  -66.16830392649604 ,  -66.17797881262764 ,  -66.18896014381710 ,
                        -66.20153824118830 ,  -66.21411633855952 ,  -66.22669443593074 ,  -66.23927253330194 ,  -66.25185063067316 ,
                        -66.26442872804438 ,  -66.27700682541558 ,  -66.28958492278680 ,  -66.29005223526313 ,  -66.30082633522356 ,
                        -66.31160043518400 ,  -66.32237453514443 ,  -66.33314863510488 ,  -66.34392273506532 ,  -66.35469683502575 ,
                        -66.36611739130440 ,  -66.37873850931682 ,  -66.39135962732924 ,  -66.40398074534166 ,  -66.41660186335409 ,
                        -66.42922298136651 ,  -66.44184409937893 ,  -66.45446521739136 ,  -66.46544085259926 ,  -66.47257702793000 ,
                        -66.47971320326076 ,  -66.48684937859150 ,  -66.49398555392226 ,  -66.50112172925300 ,  -66.50825790458376 ,
                        -66.51539407991450 ,  -66.52649413949175 ,  -66.53848207032615 ,  -66.55047000116055 ,  -66.56245793199494 ,
                        -66.57444586282934 ,  -66.58643379366374 ,  -66.59842172449814 ,  -66.61040965533253 ,  -66.62376221274262 ,
                        -66.64257327645528 ,  -66.66138434016796 ,  -66.68019540388063 ,  -66.69900646759330 ,  -66.71781753130598 ,
                        -66.73662859501864 ,  -66.75543965873132 ,  -66.77156599330630 ,  -66.78749953382746 ,  -66.80343307434862 ,
                        -66.81936661486978 ,  -66.83530015539093 ,  -66.85123369591209 ,  -66.86716723643325 ,  -66.88310077695441 ,
                        -66.90377000000011 ,  -66.92805571428582 ,  -66.95234142857153 ,  -66.97662714285725 ,  -67.00091285714296 ,
                        -67.02519857142867 ,  -67.04948428571439 ,  -67.07340693617031 ,  -67.09705232624124 ,  -67.12069771631216 ,
                        -67.14434310638308 ,  -67.16798849645400 ,  -67.19163388652493 ,  -67.21527927659584 ,  -67.23533122887501 ,
                        -67.25202606228882 ,  -67.26872089570263 ,  -67.28541572911644 ,  -67.30211056253025 ,  -67.31880539594405 ,
                        -67.33550022935786 ,  -67.35219506277167 ,  -67.36927263750007 ,  -67.38761013750008 ,  -67.40594763750008 ,
                        -67.42428513750008 ,  -67.44262263750008 ,  -67.46096013750008 ,  -67.47929763750008 ,  -67.49763513750008 ,
                        -67.51584564763240 ,  -67.53363812674104 ,  -67.55143060584967 ,  -67.56922308495831 ,  -67.58701556406695 ,
                        -67.60480804317558 ,  -67.62260052228422 ,  -67.64039300139285 ,  -67.65818548050149 ,  -67.67855317235443 ,
                        -67.70051941604052 ,  -67.72248565972662 ,  -67.74445190341270 ,  -67.76641814709879 ,  -67.78838439078488 ,
                        -67.81035063447096 ,  -67.83231687815706 ,  -67.85153863636371 ,  -67.86801590909099 ,  -67.88449318181826 ,
                        -67.90097045454553 ,  -67.91744772727280 ,  -67.93392500000007 ,  -67.95040227272735 ,  -67.96687954545462 ,
                        -67.98335681818189 ,  -68.02081226848210 ,  -68.06725836631335 ,  -68.11370446414460 ,  -68.16015056197585 ,
                        -68.20659665980710 ,  -68.25304275763835 ,  -68.29614761111131 ,  -68.33386983333352 ,  -68.37159205555575 ,
                        -68.40931427777797 ,  -68.44703650000020 ,  -68.48475872222241 ,  -68.52248094444464 ,  -68.56043350967582 ,
                        -68.59941443686502 ,  -68.63839536405422 ,  -68.67737629124340 ,  -68.71635721843260 ,  -68.75533814562180 ,
                        -68.79431907281100 ,  -68.83330000000034 ,  -68.88591883128161 ,  -68.92146590948519 ,  -68.95701298768877 ,
                        -68.99256006589233 ,  -69.02810714409591 ,  -69.06365422229948 ,  -69.10012922077942 ,  -69.13714220779241 ,
                        -69.17415519480540 ,  -69.21116818181838 ,  -69.24818116883137 ,  -69.28519415584435 ,  -69.32220714285735 ,
                        -69.35922012987034 ,  -69.39779806939755 ,  -69.43648839029503 ,  -69.47517871119248 ,  -69.51386903208996 ,
                        -69.55255935298743 ,  -69.59124967388490 ,  -69.62993999478236 ,  -69.66633716005829 ,  -69.69643888312244 ,
                        -69.72654060618659 ,  -69.75664232925074 ,  -69.78674405231489 ,  -69.81700684880947 ,  -69.84746651283015 ,
                        -69.87792617685082 ,  -69.90838584087150 ,  -69.93884550489219 ,  -69.96945788177360 ,  -70.00454520824023 ,
                        -70.03963253470687 ,  -70.07471986117350 ,  -70.10980718764014 ,  -70.14378046620908 ,  -70.17690298156867 ,
                        -70.21002549692828 ,  -70.24314801228788 ,  -70.27627052764747 ,  -70.30983155940622 ,  -70.35624245049533 ,
                        -70.38950344548043 ,  -70.40437981353880 ,  -70.41925618159718 ,  -70.46500947567938 ,  -70.50809213343312 ,
                        -70.54376552153370 ,  -70.57943890963428 ,  -70.61511229773484 ,  -70.65283254754914 ,  -70.69435411197453 ,
                        -70.73587567639993 ,  -70.77739724082532 ,  -70.81575889293357 ,  -70.85215904355489 ,  -70.88855919417620 ,
                        -70.92495934479751 ,  -70.96135949541882 ,  -70.99775964604014 ,  -71.03415979666144 ,  -71.07055994728276 ,
                        -71.09423662366807 ,  -71.11106219854189 ,  -71.12788777341570 ,  -71.14471334828950 ,  -71.16153892316330 ,
                        -71.17836449803711 ,  -71.19519007291093 ,  -71.21201564778474 ,  -71.22884122265855 ,  -71.24566679753235 ,
                        -71.26249237240616 ,  -71.27931794727998 ,  -71.29614352215378 ,  -71.31296909702759 ,  -71.32979467190140 ,
                        -71.34662025000000 ])
     depth=np.arange(0.,4885.,5.)
   elif ( region == 'Weddell' & section == 2 ): # section 76°S
     longitude=np.arange(-32.7,-28.9,0.1)
     latitude=np.zeros_like(longitude)-76.00000000
     depth=np.arange(0.,755.,5.)
   elif ( region == 'Weddell' & section == 3 ): # Filchner
     longitude=np.arange(-46.3,-34.2,0.1)
     latitude=np.array([-77.18953189165573 ,  -77.17092114460462 ,  -77.15231039755350 ,  -77.13369965050240 ,  -77.11508890345128 ,
                        -77.09647815640017 ,  -77.07786740934905 ,  -77.05925666229794 ,  -77.04064591524683 ,  -77.02203516819573 ,
                        -77.00727514727132 ,  -76.99270362343003 ,  -76.97813209958875 ,  -76.96356057574748 ,  -76.94898905190620 ,
                        -76.93441752806491 ,  -76.91984600422363 ,  -76.90527448038235 ,  -76.89070295654106 ,  -76.87613143269980 ,
                        -76.88288185415489 ,  -76.89059807801019 ,  -76.89831430186547 ,  -76.90603052572075 ,  -76.91374674957603 ,
                        -76.92292542129798 ,  -76.95501577626390 ,  -76.98710613122985 ,  -77.01919648619578 ,  -77.05128684116173 ,
                        -77.08271255035248 ,  -77.11318838116819 ,  -77.14366421198390 ,  -77.17414004279960 ,  -77.20461587361532 ,
                        -77.24215412329866 ,  -77.27970416333069 ,  -77.31725420336271 ,  -77.35480424339474 ,  -77.38939518633543 ,
                        -77.42340139751555 ,  -77.45740760869568 ,  -77.49141381987580 ,  -77.53404534829363 ,  -77.58397522206643 ,
                        -77.63390509583921 ,  -77.68383496961201 ,  -77.70809537929333 ,  -77.73174252532742 ,  -77.75538967136151 ,
                        -77.77903681739560 ,  -77.79129387587341 ,  -77.79121167283189 ,  -77.79112946979038 ,  -77.79104726674886 ,
                        -77.79138958333333 ,  -77.79230625000000 ,  -77.79322291666666 ,  -77.79413958333333 ,  -77.79468290043290 ,
                        -77.79472109752993 ,  -77.79475929462694 ,  -77.79479749172395 ,  -77.79476538108356 ,  -77.79366345270890 ,
                        -77.79256152433425 ,  -77.79145959595960 ,  -77.79035766758494 ,  -77.79098872977990 ,  -77.79198316096526 ,
                        -77.79297759215062 ,  -77.79397202333598 ,  -77.79740381973069 ,  -77.80222657323440 ,  -77.80704932673812 ,
                        -77.81187208024183 ,  -77.81577907283024 ,  -77.81905840906099 ,  -77.82233774529172 ,  -77.82561708152247 ,
                        -77.83192963836480 ,  -77.84329756289310 ,  -77.85466548742140 ,  -77.86603341194970 ,  -77.87426939867625 ,
                        -77.88191620898466 ,  -77.88956301929306 ,  -77.89720982960147 ,  -77.89000676669608 ,  -77.88109238011178 ,
                        -77.87217799352750 ,  -77.86377906081600 ,  -77.85916012317166 ,  -77.85454118552732 ,  -77.84992224788299 ,
                        -77.84530331023865 ,  -77.83908637355783 ,  -77.83244465232303 ,  -77.82580293108823 ,  -77.81924422711220 ,
                        -77.81296875848953 ,  -77.80669328986687 ,  -77.80041782124422 ,  -77.79375674775073 ,  -77.78465978007330 ,
                        -77.77556281239585 ,  -77.76646584471841 ,  -77.75736887704097 ,  -77.74760370591748 ,  -77.73355708308426 ,
                        -77.71951046025103 ,  -77.70388391699089 ,  -77.68527983138777 ,  -77.66667574578466 ,  -77.64807166018154 ,
                        -77.62946757457844 ,  -77.61086348897533 ,  -77.59225940337221 ,  -77.54534301732912 ,  -77.46934913353708 ,
                        -77.39335525000000 ])
     depth=np.arange(0.,1175.,10.)
   elif ( region == 'Weddell' & section == 4 ): # Ronne
     longitude=np.arange(-61.0,-46.9,0.1)
     latitude=np.array([ -74.73880490196078 ,  -74.76961372549019 ,  -74.80042254901960 ,  -74.81877272727273 ,  -74.83695454545455 ,
                         -74.85513636363636 ,  -74.87331818181818 ,  -74.89548054442218 ,  -74.92508976285906 ,  -74.95469898129592 ,
                         -74.98405143475907 ,  -75.00180996210071 ,  -75.01956848944234 ,  -75.03732701678398 ,  -75.05508554412562 ,
                         -75.07284407146724 ,  -75.09060259880889 ,  -75.10836112615051 ,  -75.12611965349215 ,  -75.14387818083380 ,
                         -75.16671058903644 ,  -75.19091896493020 ,  -75.21512734082397 ,  -75.23933571671775 ,  -75.26354409261151 ,
                         -75.27812869616987 ,  -75.29154405636040 ,  -75.30495941655090 ,  -75.31837477674142 ,  -75.33179013693193 ,
                         -75.34520549712245 ,  -75.35862085731296 ,  -75.37203621750348 ,  -75.38729454408026 ,  -75.40444564694566 ,
                         -75.42159674981104 ,  -75.43874785267643 ,  -75.45589895554183 ,  -75.47305005840721 ,  -75.49020116127260 ,
                         -75.50735226413799 ,  -75.52685372585098 ,  -75.54976080956763 ,  -75.57266789328428 ,  -75.59557497700094 ,
                         -75.61493926865124 ,  -75.63333324145536 ,  -75.65172721425948 ,  -75.67012118706360 ,  -75.68851515986770 ,
                         -75.70690913267183 ,  -75.72530310547594 ,  -75.74369707828006 ,  -75.76209105108418 ,  -75.78265730150840 ,
                         -75.80408942483012 ,  -75.82552154815185 ,  -75.84695367147359 ,  -75.86838579479532 ,  -75.88981791811705 ,
                         -75.91125004143878 ,  -75.93268216476051 ,  -75.95411428808224 ,  -75.97554641140397 ,  -75.98806663616956 ,
                         -75.99599588289114 ,  -76.00392512961270 ,  -76.01185437633426 ,  -76.01978362305582 ,  -76.03333750585433 ,
                         -76.07011104014991 ,  -76.10688457444547 ,  -76.14365810874105 ,  -76.18043164303661 ,  -76.21720517733218 ,
                         -76.25397871162775 ,  -76.29075224592331 ,  -76.32752578021889 ,  -76.36429931451445 ,  -76.40107284881002 ,
                         -76.43784638310560 ,  -76.47461991740116 ,  -76.51037030516436 ,  -76.54016784037562 ,  -76.56996537558689 ,
                         -76.59976291079816 ,  -76.62956044600942 ,  -76.65935798122070 ,  -76.68915551643197 ,  -76.71895305164323 ,
                         -76.74033678657077 ,  -76.75545908872904 ,  -76.77058139088732 ,  -76.78570369304559 ,  -76.80082599520387 ,
                         -76.81594829736214 ,  -76.83107059952040 ,  -76.84619290167868 ,  -76.86131520383695 ,  -76.87643750599523 ,
                         -76.89155980815350 ,  -76.90668211031178 ,  -76.93629064525223 ,  -76.96604550577632 ,  -76.99580036630041 ,
                         -77.02393629764065 ,  -77.01899981851179 ,  -77.01406333938294 ,  -77.00912686025409 ,  -77.00419038112523 ,
                         -76.99925390199637 ,  -76.99431742286751 ,  -76.98938094373865 ,  -76.98444446460980 ,  -76.97950798548094 ,
                         -76.99063035932078 ,  -77.00429486818652 ,  -77.01795937705228 ,  -77.03162388591802 ,  -77.04528839478377 ,
                         -77.05895290364951 ,  -77.07261741251526 ,  -77.08628192138102 ,  -77.09994643024676 ,  -77.11361093911250 ,
                         -77.12727544797825 ,  -77.14064640522875 ,  -77.13963333333332 ,  -77.13862026143791 ,  -77.13760718954248 ,
                         -77.13659411764705 ,  -77.13558104575164 ,  -77.13456797385620 ,  -77.13355490196078 ,  -77.13254183006536 ,
                         -77.13152875816994 ,  -77.13051568627450 ,  -77.12950261437909 ,  -77.12848954248366 ,  -77.12747647058823 ,
                         -77.1264634 ])
     depth=np.arange(0.,650.,5.)
   else:
     sys.exit("~!@#$%^* error : region is not defined, choose either 'Amundsen' or 'Weddell'")

   if ( np.size(latitude) != np.size(longitude) ):
     sys.exit("~!@#$%^* error : section must be defined with equal longitude and latitude values")

   return [longitude,latitude,depth]

#====================================================================================================
def generate_mooring_grid_oce(region='Amundsen',mooring=1):
   """Generates (longitude, latitude, depth) of the common MISOMIP2 mooring

      region: 'Amundsen' (default), 'Weddell'

      mooring: 1 -> PIG-N for Amundsen
               2 -> PIG-S for Amundsen
               3 -> PIT-E for Amundsen
               4 -> PIT-W for Amundsen

               1 -> AWI_252 for Weddell
               2 -> AWI_253 for Weddell
               3 -> AWI_254 for Weddell

      exemple: [lon,lat,depth]=generate_mooring_grid_oce(region='Amundsen')
   """

   if ( region == 'Amundsen' & mooring == 1 ): # PIG-N
     longitude=np.array([ -102.0799 ])
     latitude=np.array([ -74.8672 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 2 ): # PIG-S
     longitude=np.array([ -102.1524 ])
     latitude=np.array([ -75.0589 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 3 ): # PIT-E
     longitude=np.array([ -102.5466 ])
     latitude=np.array([ -71.3301 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 4 ): # PIT-W
     longitude=np.array([ -113.0464 ])
     latitude=np.array([ -71.5621 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 5 ): # mid shelf
     longitude=np.array([ -106.53 ])
     latitude=np.array([ -73.81 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 6 ): # Getz-Dotson NE 
     longitude=np.array([ -114.99 ])
     latitude=np.array([ -71.16 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 7 ): # Getz-Dotson SW
     longitude=np.array([ -118.46 ])
     latitude=np.array([ -71.96 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Amundsen' & mooring == 8 ): # Thwaites
     longitude=np.array([ -104.825 ])
     latitude=np.array([ -75.207 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Weddell' & mooring == 1 ): # AWI_252
     longitude=np.array([ -30.47025 ])
     latitude=np.array([ -76.09135 ])
     #depth=np.array([335.2, 421.2])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Weddell' & mooring == 2 ): # AWI_253
     longitude=np.array([ -30.99475 ])
     latitude=np.array([ -76.0459 ])
     #depth=np.array([348.9, 433.8])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Weddell' & mooring == 3 ): # AWI_254
     longitude=np.array([ -31.48375 ]) 
     latitude=np.array([ -75.9624 ]) 
     #depth=np.array([ 553.0 ])
     depth=np.arange(0.,1160.,10.)
   elif ( region == 'Weddell' & mooring == 4 ): # site 5
     longitude=np.array([ -54.71 ])
     latitude=np.array([ -80.29 ])
     depth=np.array([  ])
   elif ( region == 'Weddell' & mooring == 5 ): # FSW
     longitude=np.array([ -44.43 ])
     latitude=np.array([ -80.44 ])
     depth=np.array([  ])
   elif ( region == 'Weddell' & mooring == 6 ): # FSE
     longitude=np.array([ -40.83 ])
     latitude=np.array([ -81.08 ])
     depth=np.array([  ])
   else:
     sys.exit("~!@#$%^* error : region is not defined, choose either 'Amundsen' or 'Weddell'")

   return [longitude,latitude,depth]

